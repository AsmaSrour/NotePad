{"version":3,"sources":["types.js","components/App.js","Actions/action.js","reducers/reducer.js","index.js","components/notes.ico"],"names":["CLEAR","App","state","text","date","Date","render_Reminders","reminders","props","className","map","reminder","key","id","moment","fromNow","onClick","Remove_Peminder","src","logo","alt","onChange","e","setState","target","value","this","type","placeholder","placeholderText","selected","showTimeSelect","timeFormat","timeCaption","dateFormat","Add_Reminder","clear","Component","connect","action","console","log","reducer","read_cookie","Math","random","bake_cookie","filter","store","createStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"4PAEaA,G,MAAQ,kB,iBCQfC,E,2MAEFC,MAAQ,CACJC,KAAM,GACNC,KAAM,IAAIC,M,EAGdC,iBAAkB,WAAO,IACdC,EAAa,EAAKC,MAAlBD,UACP,OACI,wBAAIE,UAAU,cAENF,EAAUG,KAAK,SAAAC,GACX,OACI,wBAAIC,IAAMD,EAASE,GAAIJ,UAAU,mBAC7B,6BAAME,EAASR,MACf,6BAAMW,IAAO,IAAIT,KAAMM,EAASP,OAAOW,WACvC,yBAAKN,UAAU,2BAA2BO,QAAS,kBAAM,EAAKR,MAAMS,gBAAgBN,EAASE,a,wEAWhH,IAAD,OACJ,OACI,yBAAKJ,UAAU,OACX,yBAAKS,IAAKC,IAAMC,IAAI,KAEpB,yBAAKX,UAAU,kBACf,qDAGA,2BACQY,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACpB,KAAOmB,EAAEE,OAAOC,SAChDhB,UAAU,eACVgB,MAAOC,KAAKxB,MAAMC,KAClBwB,KAAK,OACLC,YAAY,4BAEnB,kBAAC,IAAD,CACOnB,UAAU,eACVgB,MAAOC,KAAKxB,MAAME,KAClByB,gBAAgB,eAChBC,SAAUJ,KAAKxB,MAAME,KACrBiB,SAAU,SAACjB,GAAU,EAAKmB,SAAS,CAACnB,KAAOA,KAC3C2B,gBAAc,EACdC,WAAW,QACXC,YAAY,OACZC,WAAW,yBAEnB,4BACIlB,QAAY,WACZ,EAAKR,MAAM2B,aAAa,EAAKjC,MAAMC,KAAO,EAAKD,MAAME,MACrD,EAAKmB,SAAS,CAACpB,KAAK,GAAKC,KAAM,MAE/BK,UAAU,6BALd,gBAUCiB,KAAKpB,mBAEN,4BACIG,UAAU,qCACVO,QAAY,kBAAM,EAAKR,MAAM4B,UAFjC,wB,GAnEEC,aA8EHC,eAAS,SAAApC,GACpB,MAAM,CACFK,UAAYL,KAEjB,CAACiC,aC1FwB,SAAChC,EAAKC,GAC9B,IAAMmC,EAAS,CACXZ,KFJoB,eEKpBxB,OACAC,QAGJ,OADAoC,QAAQC,IAAI,MAAQF,GACbA,GDmFQtB,gBC/EY,SAAEJ,GAC7B,IAAM0B,EAAS,CACXZ,KFduB,kBEevBd,MAGJ,OADA2B,QAAQC,IAAI,SAAWF,GAChBA,GDyEyBH,MCrEhB,WAChB,IAAMG,EAAS,CACXZ,KAAO3B,GAGX,OADAwC,QAAQC,IAAI,QAAUF,GACfA,ID4DID,CAI+BrC,G,wBE5D/ByC,EA7BA,WAAoB,IAAnBxC,EAAkB,uDAAZ,GAAGqC,EAAS,uCAC1BhC,EAAU,GAId,OAHAL,EAAQyC,sBAAY,aHLI,iBGQrBJ,EAAOZ,MAENpB,EAAU,GAAD,mBAAKL,GAAL,CAAa,CAACC,KAAOoC,EAAOpC,KAAOC,KAAOmC,EAAOnC,KAAMS,GAAI+B,KAAKC,YACzEC,sBAAY,YAAcvC,GACnBA,GHXgB,oBGanBgC,EAAOZ,MAEXpB,EAAUL,EAAM6C,QAAO,SAAApC,GAAQ,OAAIA,EAASE,KAAO0B,EAAO1B,MAC1DiC,sBAAY,YAAcvC,GACnBA,GAEHgC,EAAOZ,OAAS3B,GAEpBO,EAAU,GACVuC,sBAAY,YAAcvC,GACnBA,GAIAL,GCpBT8C,G,OAAMC,YAAYP,IACxBQ,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,EAAD,OAEJI,SAASC,eAAe,U,mBCb5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.7d2d69c7.chunk.js","sourcesContent":["export const ADD_REMINDER = 'ADD_REMINDER';\r\nexport const REMOVE_REMINDER = 'REMOVE_REMINDER';\r\nexport const CLEAR = 'CLEAR_REMINDER';","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {connect} from 'react-redux'\r\nimport moment from 'moment'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {Add_Reminder , Remove_Peminder , clear} from '../Actions/action'\r\nimport logo from './notes.ico'\r\n\r\n\r\nclass App extends Component{\r\n\r\n    state = {\r\n        text: '',\r\n        date: new Date()\r\n    }\r\n\r\n    render_Reminders =() => {\r\n        const {reminders} = this.props ; \r\n        return(\r\n            <ul className=\"list-group\">\r\n                {\r\n                    reminders.map( reminder => {\r\n                        return (\r\n                            <li key ={reminder.id} className=\"list-group-item\" >\r\n                                <div>{reminder.text}</div>\r\n                                <div>{moment(new Date (reminder.date)).fromNow() }</div>\r\n                                <div className=\"closeIcon btn btn-danger\" onClick={() => this.props.Remove_Peminder(reminder.id)}></div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                \r\n                }\r\n            </ul>\r\n        )\r\n    } \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className='App'>\r\n                <img src={logo} alt=''/>\r\n\r\n                <div className=\"Reminder_Title\">\r\n                <h2>What should you do ?</h2>\r\n                </div>\r\n\r\n                <input \r\n                        onChange={(e) => this.setState({text : e.target.value})}\r\n                        className=\"form-control\"\r\n                        value={this.state.text}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter What You Think...\"\r\n                />\r\n                 <DatePicker\r\n                        className=\"form-control\"\r\n                        value={this.state.date}\r\n                        placeholderText=\"Enter Date..\"\r\n                        selected={this.state.date}\r\n                        onChange={(date) => {this.setState({date : date})}}\r\n                        showTimeSelect\r\n                        timeFormat=\"HH:mm\"\r\n                        timeCaption=\"time\"\r\n                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        />\r\n                <button \r\n                    onClick = { () => {\r\n                    this.props.Add_Reminder(this.state.text , this.state.date) \r\n                    this.setState({text:'' , date: ''})\r\n                    }}\r\n                    className=\"btn btn-primary btn-block\"\r\n                >\r\n                    Add Reminder\r\n                </button>\r\n\r\n                {this.render_Reminders()}\r\n\r\n                <button \r\n                    className=\"clear_rem btn btn-danger btn-block\"\r\n                    onClick = { () => this.props.clear()}\r\n                >\r\n                    Clear Reminders\r\n                </button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect (state => {\r\n    return{\r\n        reminders : state\r\n    }\r\n}, {Add_Reminder , Remove_Peminder ,clear} ) (App) ","import {ADD_REMINDER , REMOVE_REMINDER, CLEAR} from '../types'\r\n\r\nexport const Add_Reminder = (text,date) =>{\r\n    const action = {\r\n        type : ADD_REMINDER,\r\n        text ,\r\n        date\r\n    }\r\n    console.log(\"Add\" , action)\r\n    return action;\r\n}\r\n\r\n\r\nexport const Remove_Peminder = ( id ) =>{\r\n    const action = {\r\n        type : REMOVE_REMINDER,\r\n        id\r\n    }\r\n    console.log(\"Remove\" , action)\r\n    return action;\r\n}\r\n\r\n\r\nexport const clear= () =>{\r\n    const action = {\r\n        type : CLEAR,\r\n    }\r\n    console.log(\"clear\" , action)\r\n    return action;\r\n}","import {ADD_REMINDER , REMOVE_REMINDER ,CLEAR} from '../types'\r\nimport{bake_cookie , read_cookie} from 'sfcookies' \r\n\r\nconst reducer =(state=[],action)=>{\r\n    let reminders=[];\r\n    state = read_cookie('reminders')\r\n\r\n\r\n    if(action.type === ADD_REMINDER)\r\n    {\r\n        reminders=[...state , {text : action.text , date : action.date, id: Math.random() }];\r\n        bake_cookie('reminders' , reminders)\r\n        return reminders ;\r\n    }\r\n    else if(action.type === REMOVE_REMINDER)\r\n    {\r\n        reminders=state.filter(reminder => reminder.id !== action.id)\r\n        bake_cookie('reminders' , reminders)\r\n        return reminders ;\r\n    }\r\n    else if(action.type === CLEAR)\r\n    {\r\n        reminders=[];\r\n        bake_cookie('reminders' , reminders)\r\n        return reminders ;\r\n    }\r\n    else\r\n    {\r\n        return state\r\n    }\r\n   \r\n}\r\nexport default reducer","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport reducer from './reducers/reducer'\r\nimport './index.css'\r\n\r\nconst store=createStore(reducer);\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n    \r\n)","module.exports = __webpack_public_path__ + \"static/media/notes.2a228017.ico\";"],"sourceRoot":""}